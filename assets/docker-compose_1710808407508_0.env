# The UID and GID of the user used to run paperless in the container. Set this
# to your UID and GID on the host so that you have write access to the
# consumption directory.
USERMAP_UID=1000
USERMAP_GID=1000
###############################################################################
# Paperless-specific settings #
###############################################################################
# All settings defined in the paperless.conf.example can be used here. The
# Docker setup does not use the configuration file.
# A few commonly adjusted settings are provided below.
# This is required if you will be exposing Paperless-ngx on a public domain
# (if doing so please consider security measures such as reverse proxy)
#PAPERLESS_URL=https://paperless.example.com
# Adjust this key if you plan to make paperless available publicly. It should
# be a very long sequence of random characters. You don't need to remember it.
#PAPERLESS_SECRET_KEY=change-me
# Use this variable to set a timezone for the Paperless Docker containers. If not specified, defaults to UTC.
PAPERLESS_TIME_ZONE=America/Denver
# The default language to use for OCR. Set this to the language most of your
# documents are written in.
PAPERLESS_OCR_LANGUAGE=eng
# Tell paperless when and how to perform ocr on your documents. Three modes are
# available:
#
# skip: Paperless skips all pages and will perform ocr only on pages where
# no text is present. This is the safest option.
#
# redo: Paperless will OCR all pages of your documents and attempt to
# replace any existing text layers with new text. This will be useful
# for documents from scanners that already performed OCR with
# insufficient results. It will also perform OCR on purely
# digital documents.
#
# This option may fail on some documents that have features that
# cannot be removed, such as forms. In this case, the text from the
# document is used instead.
#
# force: Paperless rasterizes your documents, converting any text into images
# and puts the OCRed text on top. This works for all documents,
# however, the resulting document may be significantly larger and text
# won't appear as sharp when zoomed in.
#
# The default is skip, which only performs OCR when necessary and always creates
# archived documents.
PAPERLESS_OCR_MODE=skip
# Set if accessing paperless via a domain subpath e.g. https://domain.com/PATHPREFIX
# and using a reverse-proxy like traefik or nginx
#PAPERLESS_FORCE_SCRIPT_NAME=/PATHPREFIX
#PAPERLESS_STATIC_URL=/PATHPREFIX/static/ # trailing slash required
###############################################################################
# Additional Settings
###############################################################################
# Paperless searches an entire document for dates. The first date found will be
# used as the initial value for the created date. When this variable is greater
# than 0 (or left to it's default value), paperless will also suggest other
# dates found in the document, up to a maximum of this setting. Note that
# duplicates will be removed, which can result in fewer dates displayed in the
# frontend than this setting value.
#
# The task to find all dates can be time-consuming and increases with a higher
# (maximum) number of suggested dates and slower hardware.
#
# Defaults to 3. Set to 0 to disable this feature.
PAPERLESS_NUMBER_OF_SUGGESTED_DATES=9
# Changes the filenames paperless uses to store documents in the media
# directory. See File name handling for details.
# Default is none, which disables this feature.
#PAPERLESS_FILENAME_FORMAT={created_year}/{correspondent}/{original_name}
PAPERLESS_FILENAME_FORMAT="By Year"
# Paperless will try to determine the document creation date from its contents.
# Specify the date format Paperless should expect to see within your documents.
#
# This option defaults to DMY which translates to day first, month second, and
# year last order. Characters D, M, or Y can be shuffled to meet the required
# order.
PAPERLESS_DATE_ORDER=MDY
# Enables the scanning and page separation based on detected barcodes. This
# allows for scanning and adding multiple documents per uploaded file, which
# are separated by one or multiple barcode pages.
#
# For ease of use, it is suggested to use a standardized separation page, e.g.
# here.
#
# If no barcodes are detected in the uploaded file, no page separation will
# happen.
#
# The original document will be removed and the separated pages will be saved
# as pdf.
#
# See additional information in the advanced usage documentation
#
# Defaults to false.
PAPERLESS_CONSUMER_ENABLE_BARCODES=false
# Enables the detection of barcodes in the scanned document and setting the ASN
# (archive serial number) if a properly formatted barcode is detected.
#
# The barcode must consist of a (configurable) prefix and the ASN to be set,
# for instance ASN00123. The content after the prefix is cleaned of non-numeric
# characters.
#
# This option is compatible with barcode page separation, since pages will be
# split up before reading the ASN.
#
# If no ASN barcodes are detected in the uploaded file, no ASN will be set. If
# a barcode with an existing ASN is detected, the document will not be consumed
# and an error logged.
#
# Defaults to false.
PAPERLESS_CONSUMER_ENABLE_ASN_BARCODE=false
# Paperless uses multiple threads when consuming documents to speed up OCR. This
# variable specifies how many pages paperless will process in parallel on a
# single document.
PAPERLESS_TASK_WORKERS=3
PAPERLESS_THREADS_PER_WORKER=2
# Configures the scheduled email fetching frequency. The value should be a
# valid crontab(5) expression describing when to run.
# If set to the string "disable", no emails will be fetched automatically.
#
# Defaults to */10 * * * * or every ten minutes.
PAPERLESS_EMAIL_TASK_CRON=disable
# Configures the scheduled automatic classifier training frequency. The value
# should be a valid crontab(5) expression describing when to run.
# If set to the string "disable", the classifier will not be trained
# automatically.
#
# Defaults to 5 */1 * * * or every hour at 5 minutes past the hour.
# PAPERLESS_TRAIN_TASK_CRON=<cron expression>
PAPERLESS_TRAIN_TASK_CRON=0 * * * *
# Configures the scheduled search index update frequency. The value should be
# a valid crontab(5) expression describing when to run.
# If set to the string "disable", the search index will not be automatically
# updated.
#
# Defaults to 0 0 * * * or daily at midnight.
# PAPERLESS_INDEX_TASK_CRON=<cron expression>
PAPERLESS_INDEX_TASK_CRON=10 0 * * 0
# Configures the scheduled sanity checker frequency.
# If set to the string "disable", the sanity checker will not run automatically.
#
# Defaults to 30 0 * * sun or Sunday at 30 minutes past midnight.
# PAPERLESS_SANITY_TASK_CRON=<cron expression>
PAPERLESS_SANITY_TASK_CRON=15 0 1 * *
###############################################################################
# Polling Settings
###############################################################################
# If paperless won't find documents added to your consume folder, it might not
# be able to automatically detect filesystem changes. In that case, specify a
# polling interval in seconds here, which will then cause paperless to
# periodically check your consumption directory for changes. This will also
# disable listening for file system changes with inotify.
#
# Defaults to 0, which disables polling and uses filesystem notifications.
PAPERLESS_CONSUMER_POLLING=60
# If consumer polling is enabled, sets the number of times paperless will
# check for a file to remain unmodified.
#
# Defaults to 5.
#PAPERLESS_CONSUMER_POLLING_RETRY_COUNT=<num>
# If consumer polling is enabled, sets the delay in seconds between each check
# (above) paperless will do while waiting for a file to remain unmodified.
#
# Defaults to 5.
#PAPERLESS_CONSUMER_POLLING_DELAY=<num>